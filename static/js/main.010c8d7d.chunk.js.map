{"version":3,"sources":["types/StatusSelector.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["StatusSelector","TodoInfo","todo","onSelectTodo","selectedTodo","isTodoSelected","id","className","cn","completed","title","type","onClick","TodoList","todos","map","TodoFilter","searchQuery","onSearch","onSelectStatus","onSubmit","event","preventDefault","onChange","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","React","memo","onClose","useState","user","setUser","useEffect","userId","getUser","userFromServer","href","email","name","App","setTodos","setSelectedTodo","setSearchQuery","selectorStatus","setSelectorStatus","todosFromServer","visibleTodos","filter","normalizedTodo","toLowerCase","trim","includes","Error","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.010c8d7d.chunk.js","sourcesContent":["export enum StatusSelector {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo\n  onSelectTodo: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoInfo: FC<Props> = ({\n  todo,\n  onSelectTodo,\n  selectedTodo,\n}) => {\n  const isTodoSelected = todo.id === selectedTodo?.id;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({ 'has-background-info-light': isTodoSelected })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={cn({ 'has-text-danger': !todo.completed },\n          { 'has-text-success': todo.completed })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onSelectTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={cn('far', {\n              'fa-eye-slash': selectedTodo === todo,\n              'fa-eye': selectedTodo !== todo,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n  onSelectTodo: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n          onSelectTodo={onSelectTodo}\n          selectedTodo={selectedTodo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import { FC, ChangeEvent } from 'react';\nimport { StatusSelector } from '../../types/StatusSelector';\n\ninterface Props {\n  searchQuery: string;\n  onSearch: (searchInput: string) => void;\n  onSelectStatus(StatusSelector: StatusSelector): void;\n}\nexport const TodoFilter: FC<Props> = ({\n  searchQuery,\n  onSearch,\n  onSelectStatus,\n}) => {\n  const handlePreventDefault = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  const handleSelectStatus = (event: ChangeEvent<HTMLSelectElement>) => {\n    onSelectStatus(event.target.value as StatusSelector);\n  };\n\n  const handleSearchQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    onSearch(event.target.value);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={handlePreventDefault}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelectStatus}\n          >\n            <option value={StatusSelector.ALL}>All</option>\n            <option value={StatusSelector.ACTIVE}>Active</option>\n            <option value={StatusSelector.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={handleSearchQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {searchQuery && (\n            <button\n              aria-label=\"clearSearch\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onSearch('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { FC, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo | null;\n  onClose: () => void;\n}\n\nexport const TodoModal: FC<Props> = React.memo(({ todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (todo) {\n      const { userId } = todo;\n\n      getUser(userId)\n        .then(userFromServer => {\n          setUser(userFromServer);\n        });\n    }\n  }, [todo]);\n\n  if (!todo) {\n    return null;\n  }\n\n  const { title, id, completed } = todo;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!user\n        ? (<Loader />)\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={onClose}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n});\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { StatusSelector } from './types/StatusSelector';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectorStatus, setSelectorStatus] = useState(StatusSelector.ALL);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      });\n  }, []);\n\n  const visibleTodos = todos.filter(todo => {\n    const normalizedTodo = todo.title.toLowerCase().trim().includes(searchQuery.toLowerCase());\n\n    switch (selectorStatus) {\n      case StatusSelector.ALL:\n        return normalizedTodo;\n      case StatusSelector.ACTIVE:\n        return normalizedTodo && !todo.completed;\n      case StatusSelector.COMPLETED:\n        return normalizedTodo && todo.completed;\n      default:\n        throw new Error('Unknown status selector');\n    }\n  });\n\n  const selectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const filteredSearchInput = (value: string) => {\n    setSearchQuery(value);\n  };\n\n  const closeSelectedTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchQuery={searchQuery}\n                onSearch={filteredSearchInput}\n                onSelectStatus={setSelectorStatus}\n\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    onSelectTodo={selectTodo}\n                  />\n                ) : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={closeSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}